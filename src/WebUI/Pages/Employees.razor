@page "/employee/list/{Page}"
@inject IEmployeeService  _employeeService
@inject IDepartmentService _departmentService
@inject IJSRuntime _jsRuntime
@attribute [Authorize(Policy = Policies.IsAdmin)]


<h3>Employees</h3>

<div class="row mb-2">
    <div class="col-md-8">
        <button class="btn btn-secondary" type="button" @onclick='@(_ => AddModal("ModalA"))'>
            <span class="zmdi zmdi-plus zmdi-hc-lg"></span> Add Employee
        </button>
    </div>

    <div class="form-inline col-md-4 text-md-right">
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Filter by First / Last Name" @bind="@SearchTerm" @onkeyup="@SearchBoxKeyPress">

            <button class="btn btn-sm btn-outline-success" @onclick="@SearchClick">
                <span class="zmdi zmdi-search zmdi-hc-2x"></span>
            </button>
            <button class="btn btn-sm btn-outline-warning " @onclick="@ClearSearch">
                <span class="zmdi zmdi-close zmdi-hc-2x"></span>
            </button>
        </div>

    </div>
</div>




@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">

        @foreach (var emp in employees.Results)
        {
            <div class="col-sm-6 col-md-6 col-lg-6 pb-3">
                <div class="card mb-4 shadow-sm shadow-lg">
                    <div class="row no-gutters">
                        <div class="col-md-3">
                            <picture>
                                <img src="@emp.Picture" class="img-fluid" />
                            </picture>
                        </div>
                        <div class="col-md-9">
                            <div class="card-body">
                                <h5 class="card-title text-justify">@emp.LastName &nbsp; @emp.FirstName </h5>
                                

                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item"> <b>Username:</b> @emp.Username</li>
                                    <li class="list-group-item"> <b>Serial No:</b> @emp.EmployeeNumber</li>
                                    <li class="list-group-item"> <b>Department:</b> @emp.DepartmentName</li>
                                    <li class="list-group-item"> <b>Phone N0:</b> @emp.Phone</li>
                                </ul>

                                <div class=" row card-footer">
                                    <div class="col-4">
                                        <button class="btn btn-warning btn-sm" type="button" @onclick='@(_ => EditModal("ModalB", emp.Id))'>
                                            <span class="zmdi zmdi-edit zmdi-hc-lg"></span> Edit
                                        </button>
                                    </div>
                                    <div class="col-4">
                                        <button class="btn btn-danger btn-sm " type="button" @onclick='@(_ => OpenDeleteModal("deleteConfirmation", emp.Id))'>
                                            <span class="zmdi zmdi-delete zmdi-hc-lg"></span> Delete
                                        </button>
                                    </div>
                                    <div class="col-4">
                                        <button class="btn btn-info btn-sm float-right" type="button" @onclick='@(_ => DetailModal("ModalD", emp.Id))'>
                                            <span class="zmdi zmdi-accounts-alt zmdi-hc-lg"></span> Info
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }

    </div>

}

<div>
    <div class="modal fade" id="ModalA" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
         <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Employee</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="Employee" OnValidSubmit='_ => AddEmployee("ModalA")'>

                        <FluentValidationValidator Validator="new EmployeeValidator()" />
                        
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Username</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Username" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Username)" />
                            </div>
                        </div>
                        

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Last Name</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.LastName" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.LastName)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">First Name</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.FirstName" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.FirstName)" />
                            </div>
                        </div>
                        
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Password</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Password" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Password)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Employee NO:</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.EmployeeNumber" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.EmployeeNumber)" />
                            </div>
                        </div>


                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Hire Date</label>
                            <div class="col-sm-6">
                                <DateTimePicker @bind-Value="@Employee.HireDate" Mode="DateTimePickerMode.Date" />
                                <ValidationMessage For="@(() =>Employee.HireDate)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Gender</label>
                            <div class="col-sm-6">
                                <InputSelect @bind-Value="Employee.Gender" class="custom-select form-control">
                                    @foreach (var gender in Enum.GetValues(typeof(GenderVm)))
                                    {
                                        <option value="@gender">@gender</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() =>Employee.Gender)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Email</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Email" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Email)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Mobile Phone</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Phone" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Phone)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Designation</label>
                            <div class="col-sm-6">

                                <InputSelect @bind-Value="Employee.Designation" class="custom-select form-control">
                                    @foreach (var designation in Enum.GetValues(typeof(DesignationVm)))
                                    {
                                        <option value="@designation">@designation</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() =>Employee.Designation)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Department</label>
                            <div class="col-sm-6">
                                <CustomInputSelect @bind-Value="Employee.DepartmentId" class="custom-select form-control">
                                    <option>Select Dept</option>
                                    @foreach (var dept in Departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                </CustomInputSelect>
                                <ValidationMessage For="@(() =>Employee.DepartmentId)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Picture</label>

                            <div class="col-sm-6">
                                <InputImg Label="Picture" OnSelectedImage="PictureSelected" ImageURL="@imageURL" />
                            </div>
                            <div>
                                @if (Employee.ImageBase64 is not null)
                                {
                                    <img src="@Employee.ImageBase64" style="width: 160px;" />
                                }
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label"></label>
                            <div class="col-sm-6">
                                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">
                                    <span class="zmdi zmdi-close zmdi-hc-lg"></span> Close
                                </button>
                                &nbsp;&nbsp;
                                <button type="submit" class="btn btn-sm btn-success ">
                                    <span class="zmdi zmdi-mail-send zmdi-hc-lg"></span> Save
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


<div>
    <div class="modal fade" id="ModalD" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>@Employee.LastName</b> Details </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                
                <div class="modal-body">
                    <div class="card mb-4 shadow-sm shadow-lg">
                        <div class="no-gutters">
                            <div class="card-body">
                                <picture>
                                    <img src="@Employee.Picture" width="160" height="160" />
                                </picture>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item"> <b>LastName:</b> @Employee.LastName</li>
                                    <li class="list-group-item"> <b>FirstName:</b> @Employee.FirstName</li>
                                    <li class="list-group-item"> <b>Designation:</b> @Employee.Designation</li>
                                    <li class="list-group-item"> <b>Username:</b> @Employee.Username</li>
                                    <li class="list-group-item"> <b>Serial No:</b> @Employee.EmployeeNumber</li>
                                    <li class="list-group-item"> <b>Department:</b> @Employee.DepartmentName</li>
                                    <li class="list-group-item"> <b>Phone N0:</b> Employee.Phone</li>
                                    <li class="list-group-item"> <b>Hire-Date:</b> @Employee.HireDate</li>
                                    <li class="list-group-item"> <b>Gender:</b> @Employee.Gender</li>
                                   
                                </ul>

                                    
                            </div>
                        </div>

                    </div>
                </div>
                
                <div class="modal-footer">

                </div>

            </div>
        </div>
    </div>
</div>


<div>
    <div class="modal fade" id="ModalB" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content modal-lg">
                <div class="modal-header">
                    <h5 class="modal-title">Edit <b>@Employee.LastName</b> </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="Employee" OnValidSubmit='_ => EditEmployee("ModalB")'>

                        <FluentValidationValidator Validator="new EmployeeValidator()" />
                        
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Username</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Username" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Username)" />
                            </div>
                        </div>
                        

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Last Name</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.LastName" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.LastName)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">First Name</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.FirstName" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.FirstName)" />
                            </div>
                        </div>
                        
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Password</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Password" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Password)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Employee NO:</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.EmployeeNumber" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.EmployeeNumber)" />
                            </div>
                        </div>


                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Hire Date</label>
                            <div class="col-sm-6">
                                <DateTimePicker @bind-Value="@Employee.HireDate" Mode="DateTimePickerMode.Date" />
                                <ValidationMessage For="@(() =>Employee.HireDate)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Gender</label>
                            <div class="col-sm-6">
                                <InputSelect @bind-Value="Employee.Gender" class="custom-select form-control">
                                    @foreach (var gender in Enum.GetValues(typeof(GenderVm)))
                                    {
                                        <option value="@gender">@gender</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() =>Employee.Gender)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Email</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Email" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Email)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Mobile Phone</label>
                            <div class="col-sm-6">
                                <InputText @bind-Value="@Employee.Phone" class="form-control" />
                                <ValidationMessage For="@(() =>Employee.Phone)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Designation</label>
                            <div class="col-sm-6">

                                <InputSelect @bind-Value="Employee.Designation" class="custom-select form-control">
                                    @foreach (var designation in Enum.GetValues(typeof(DesignationVm)))
                                    {
                                        <option value="@designation">@designation</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() =>Employee.Designation)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Department</label>
                            <div class="col-sm-6">
                                <CustomInputSelect @bind-Value="Employee.DepartmentId" class="custom-select form-control">
                                    <option>Select Dept</option>
                                    @foreach (var dept in Departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                </CustomInputSelect>
                                <ValidationMessage For="@(() =>Employee.DepartmentId)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Picture</label>
                            <div class="col-sm-6">
                               <InputImg Label="Picture" OnSelectedImage="PictureSelected" ImageURL="@imageURL" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label"></label>
                            <div class="col-sm-9">
                                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">
                                    <span class="zmdi zmdi-close zmdi-hc-lg"></span> Close
                                </button>
                                &nbsp;&nbsp;
                                <button type="submit" class="btn btn-sm btn-success ">
                                    <span class="zmdi zmdi-mail-send zmdi-hc-lg"></span> Save-Edit
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>

            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="deleteConfirmation" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Are You Sure You Want To Delete 
                    <span class="text-danger">@Employee.LastName  &nbsp; @Employee.FirstName</span> ?</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            
            <div class="modal-body">
                <picture>
                    <img src="@Employee.Picture" width="120" height="120" />
                </picture>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">
                    <span class="zmdi zmdi-close zmdi-hc-lg"></span>
                </button>
                &nbsp;&nbsp;
                <button type="button" class="btn btn-sm btn-success" @onclick='@(_ => ConfirmDelete("deleteConfirmation"))'>
                    <span class="zmdi zmdi-mail-send zmdi-hc-lg"></span>
                </button>
            </div>
        </div>
    </div>
</div>



@code {

    [Parameter] public string Page { get; set; } = "1";
    [Parameter] public string SearchTerm { get; set; } = string.Empty;
    [Parameter] public string EmployeeId { get; set; }

    protected PagedResult<EmployeeListVm> employees;

    public EmployeeVm Employee = new EmployeeVm();
    public List<DepartmentVm> Departments { get; set; } = new List<DepartmentVm>();
    string imageURL;



    private void PictureSelected(string imageBase64)
    {
        Employee.Picture = imageBase64;
        imageURL = null;
        Console.WriteLine(imageBase64);
    }


    protected override async Task OnParametersSetAsync()
    {
        employees = await _employeeService.GetEmployees(SearchTerm, Page);

    }

    protected async Task SearchBoxKeyPress(KeyboardEventArgs ev)
    {
        if (ev.Key == "Enter")
        {
            await SearchClick();
        }
    }

    protected async Task SearchClick()
    {
        if (string.IsNullOrEmpty(SearchTerm))
        {
            employees = await _employeeService.GetEmployees(SearchTerm, Page);
            return;
        }

        employees = await _employeeService.GetEmployees(SearchTerm, Page);
        StateHasChanged();
    }

    protected async Task ClearSearch()
    {
        SearchTerm = string.Empty;
        employees = await _employeeService.GetEmployees(SearchTerm, Page);
        StateHasChanged();
    }

    public async Task DetailModal(string modalId, string itemId)
    {
        if (itemId != null)
        {
            Employee = await _employeeService.GetEmployeeById(itemId);
            EmployeeId = itemId;
        }

        Departments = await _departmentService.GetDepartments();

       await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }



    public async Task AddModal(string modalId)
    {
        Employee = new EmployeeVm();
        Departments = await _departmentService.GetDepartments();


        if (!string.IsNullOrEmpty(Employee.Picture))
        {
            imageURL = Employee.Picture;
            Employee.Picture = null;
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }


    public async Task EditModal(string modalId, string itemId)
    {
        if (itemId != null)
        {
            Employee = await _employeeService.GetEmployeeById(itemId);
            EmployeeId = itemId;
        }

        Departments = await _departmentService.GetDepartments();

        if (!string.IsNullOrEmpty(Employee.Picture))
        {
            imageURL = Employee.Picture;
            Employee.Picture = null;
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }



    public async Task AddEmployee(string modalId)
    {
        await _employeeService.CreateEmployee(Employee);
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
        await OnParametersSetAsync();
    }

    public async Task EditEmployee(string modalId)
    {
        if (Employee.Id != null)
        {
            await _employeeService.UpdateEmployee(Employee);

        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
        await OnInitializedAsync();
    }
    
    public async Task CloseModal(string modalId)
    {
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }

    public async Task OpenDeleteModal(string modalId, string itemId)
    {
        Employee = await _employeeService.GetEmployeeById(itemId);
        EmployeeId = itemId;
        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }
    public async Task ConfirmDelete(string modalId)
    {

        if (Employee.Id != null)
        {
            await _employeeService.DeleteEmployee(EmployeeId);

        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
        await OnInitializedAsync();
    }

}
